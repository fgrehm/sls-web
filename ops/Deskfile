# vi: ft=sh

dcompose() {
  echo "docker-compose -f docker-compose.prod.yml -p slsweb $*"
  docker-compose -f docker-compose.prod.yml -p slsweb $*
}

create-machine() {
  if ! [[ -f ../.keys/do ]]; then
    echo 'ERROR: Digitalocean keys not found on `../.keys/do`!'
    return 1
  fi
  docker-machine create --driver digitalocean \
                        --digitalocean-access-token $(cat ../.keys/do) \
                        $*
}

# TODO: Refactor to Terraform

bootstrap() {
  echo '-----> Creating swarm master'
  bootstrap-swarm-master 2>&1 | _ensure_indent
  echo '-----> Creating web node'
  create-web-node "01" 2>&1 | _ensure_indent
  echo '-----> Creating queue node'
  create-queue-node "01" 2>&1 | _ensure_indent
  echo '-----> Creating db node'
  create-db-node "01" 2>&1 | _ensure_indent
  echo '-----> Creating solver nodes'
  create-solver-node "01" 2>&1 | _ensure_indent
  create-solver-node "02" 2>&1 | _ensure_indent

  eval $(docker-machine env --swarm slsweb-swarm-master)

  echo '-----> Pulling images'
  dcompose pull 2>&1 | _ensure_indent
  echo '-----> Starting services'
  dcompose up -d 2>&1 | _ensure_indent
  echo '-----> Scaling workers to 10'
  dcompose scale worker=10 2>&1 | _ensure_indent

  echo
  echo "-----> SLS is now live at http://$(docker-machine ip slsweb-web-01)"
}

teardown() {
  echo -n 'Are you sure? [y/N] '
  read answer
  if [ "$answer" != "y" ]; then
    echo 'Aborting'
    return 1
  fi

  docker-machine rm -f $(docker-machine ls --filter name=slsweb -q)
}

bootstrap-swarm-master() {
  create-machine slsweb-kvstore

  docker-machine ssh slsweb-kvstore \
    docker run --name consul \
               --restart=always \
               -p 8400:8400 \
               -p 8500:8500 \
               -p 53:53/udp \
               -d \
               progrium/consul \
               -server -bootstrap-expect 1 -ui-dir /ui

  create-swarm-agent --swarm-master slsweb-swarm-master
}

create-swarm-agent() {
  create-machine --swarm \
                 --swarm-discovery="consul://$(docker-machine ip slsweb-kvstore):8500" \
                 --engine-opt="cluster-store=consul://$(docker-machine ip slsweb-kvstore):8500" \
                 --engine-opt="cluster-advertise=eth0:2376" \
                 $*
}

create-web-node() {
  create-swarm-agent slsweb-web-${1}
}

create-queue-node() {
  create-swarm-agent slsweb-queue-${1}
}

create-db-node() {
  create-swarm-agent --digitalocean-size="1gb" slsweb-db-${1}
}

create-solver-node() {
  size=${2:-8gb}
  create-swarm-agent --digitalocean-size=$size slsweb-solver-${1}
}

eval $(docker-machine env --swarm slsweb-swarm-master)


function _ensure_indent() {
  while read line; do
    if [[ "$line" == --* ]]; then
      echo $'\e[1G'$line
    else
      echo $'\e[1G      ' "$line"
    fi
  done
}
